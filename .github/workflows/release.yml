name: Release & JitPack Build

on:
  push:
    branches:
      - main

jobs:
  check-changes:
    runs-on: ubuntu-latest
    outputs:
      should_run: ${{ steps.check.outputs.should_run }}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      
      - name: Check for non-README changes
        id: check
        run: |
          CHANGED_FILES=$(git diff --name-only ${{ github.event.before }} ${{ github.event.after }})
          if echo "$CHANGED_FILES" | grep -v "^README.md$" > /dev/null; then
            echo "should_run=true" >> $GITHUB_OUTPUT
          else
            echo "should_run=false" >> $GITHUB_OUTPUT
          fi

  build-test-release:
    needs: check-changes
    if: needs.check-changes.outputs.should_run == 'true'
    runs-on: ubuntu-latest
    
    env:
      REPO_NAME: s12171934/rest-response
      
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
          
      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: gradle
          
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
        
      - name: Build
        run: ./gradlew clean build
        
      - name: Test
        run: ./gradlew test
        
      - name: Generate new tag
        id: tag
        run: |
          latest_tag=$(git describe --tags --abbrev=0 || echo 'v0.0.0')
          major=$(echo $latest_tag | cut -d. -f1 | tr -d 'v')
          minor=$(echo $latest_tag | cut -d. -f2)
          patch=$(echo $latest_tag | cut -d. -f3)
          new_tag="${major}.${minor}.$((patch + 1))"
          echo "NEW_TAG=${new_tag}" >> $GITHUB_ENV
          echo "new_tag=${new_tag}" >> $GITHUB_OUTPUT
          
      - name: Create and push tag
        run: |
          git config --global user.email "ssong99999@naver.com"
          git config --global user.name "s12171934"
          git tag -a ${{ env.NEW_TAG }} -m "Release ${{ env.NEW_TAG }}"
          git push origin ${{ env.NEW_TAG }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ env.NEW_TAG }}
          name: Release ${{ env.NEW_TAG }}
          body: |
            üéâ New Release ${{ env.NEW_TAG }}
            
            ## What's Changed
            * Automated release from GitHub Actions
            * Check JitPack build status at: https://jitpack.io/#${{ env.REPO_NAME }}/${{ env.NEW_TAG }}
          draft: false
          prerelease: false
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Wait for JitPack Build
        id: jitpack
        run: |
          for i in {1..30}; do
            echo "Checking JitPack build (attempt $i)..."
            response=$(curl -s "https://jitpack.io/api/builds/com.github.${{ env.REPO_NAME }}/${{ env.NEW_TAG }}")
            status=$(echo $response | jq -r '.status')
            
            if [ "$status" = "ok" ]; then
              echo "::notice::üéâ JitPack build successful for version ${{ env.NEW_TAG }}"
              exit 0
            fi
            
            sleep 20
          done
          echo "::error::‚ùå JitPack build check timed out"
          exit 1
